/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hrm_L: hrm_L {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            require-prior-idle-ms = <50>;
            quick-tap-ms = <100>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41 39>;
        };

        hrm_R: hrm_R {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    combos {
        compatible = "zmk,combos";

        acces_media_controls {
            bindings = <&mo 3>;
            key-positions = <24 36>;
        };
    };

    kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp TAB  &kp Q              &kp W              &kp E                  &kp R                &kp T      &kp Y      &kp U               &kp I               &kp O                   &kp P                    &kp LEFT_BRACKET
&kp ESC  &hrm_L LEFT_GUI A  &hrm_L LEFT_ALT S  &hrm_L LEFT_CONTROL D  &hrm_L LEFT_SHIFT F  &kp G      &kp H      &hrm_R RIGHT_GUI J  &hrm_R RIGHT_ALT K  &hrm_R RIGHT_CONTROL L  &hrm_R RIGHT_SHIFT SEMI  &kp SQT
&mo 2    &kp Z              &kp X              &kp C                  &kp V                &kp B      &kp N      &kp M               &kp COMMA           &kp DOT                 &kp FSLH                 &mo 2
                                               &mo 1                  &kp BACKSPACE        &kp DEL    &kp ENTER  &kp SPACE           &mo 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1    |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | LCTRL| BTCLR | BT0 | BT1 | BT2 | BT3 |   | LFT | DWN |  UP | RGT |     |      |
            // | ESC  |       | HOME| PGUP| PGDN| END |   |     |     |     |     |     |      |
            //                      | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB       &kp EXCL               &kp AT_SIGN         &kp HASH                   &kp DOLLAR               &kp PERCENT    &kp CARET  &kp AMPERSAND          &kp ASTERISK         &kp LEFT_PARENTHESIS        &kp RIGHT_PARENTHESIS  &kp GRAVE
&kp ESC       &hrm_L LEFT_GUI LC(X)  &hm LEFT_ALT LC(A)  &hrm_L LEFT_CONTROL LC(C)  &hrm_L LEFT_SHIFT LC(V)  &kp LC(R)      &kp LEFT   &hrm_R RIGHT_GUI DOWN  &hrm_R RIGHT_ALT UP  &hrm_R RIGHT_CONTROL RIGHT  &kp RIGHT_SHIFT        &kp BACKSLASH
&kp CAPSLOCK  &trans                 &kp HOME            &kp PG_UP                  &kp PG_DN                &kp END        &trans     &kp MINUS              &kp EQUAL            &kp LEFT_BRACKET            &kp RIGHT_BRACKET      &trans
                                                         &trans                     &trans                   &trans         &trans     &trans                 &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |   !   |   @   |   #   |   $   |   %   |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |RGB_TOG|RGB_HUI|RGB_SAI|RGB_VAI|       |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |RGB_MOD|RGB_HUD|RGB_SAD|RGB_VAD|QK_BOOT|   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                            | GUI |     |  SPC  |   | ENT |     | ALT |

            bindings = <
&trans  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_CLR     &kp MINUS   &kp N7  &kp N8  &kp N9  &kp EQUAL        &kp BSPC
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &trans         &kp PLUS    &kp N4  &kp N5  &kp N6  &kp KP_MULTIPLY  &kp GRAVE
&trans  &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &bootloader    &kp KP_DOT  &kp N1  &kp N2  &kp N3  &kp KP_DIVIDE    &kp TILDE
                                          &trans           &trans           &trans         &trans      &trans  &kp N0
            >;
        };

        media_controls {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
